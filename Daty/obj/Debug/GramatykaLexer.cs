//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from H:\Kalkulator dat\Daty\Daty.g4 by ANTLR 4.6.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Daty {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5")]
[System.CLSCompliant(false)]
public partial class GramatykaLexer : Lexer {
	public const int
		SLOWNIE=1, SEPARATOR=2, SEPARATOR1=3, SEPARATOR2=4, MINUS=5, PLUS=6, SGODZ=7, 
		MIESIAC=8, GODZINA=9, DZIEN=10, MINSEC=11, SPAN=12, ROK=13, LICZBA=14, 
		WS=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"STY", "LUT", "MAR", "KWI", "MAJ", "CZE", "LIP", "SIE", "WRZ", "PAZ", 
		"LIS", "GRU", "SLOWNIE", "SEPARATOR", "SEPARATOR1", "SEPARATOR2", "MINUS", 
		"PLUS", "SGODZ", "MIESIAC", "GODZINA", "DZIEN", "MINSEC", "SPAN", "ROK", 
		"LICZBA", "CYFRA", "WS"
	};


	public GramatykaLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "SLOWNIE", "SEPARATOR", "SEPARATOR1", "SEPARATOR2", "MINUS", "PLUS", 
		"SGODZ", "MIESIAC", "GODZINA", "DZIEN", "MINSEC", "SPAN", "ROK", "LICZBA", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Daty.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x11\xC1\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
		"\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\f\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x5\xEx\n\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x5\x15\x8A\n\x15\x3\x16\x3\x16\x3\x16\x3\x16\x5\x16\x90\n\x16"+
		"\x3\x17\x3\x17\x3\x17\x3\x17\x5\x17\x96\n\x17\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x5\x18\x9C\n\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x5\x1A\xAB\n\x1A\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x6\x1B\xB3\n\x1B\r\x1B\xE\x1B\xB4\x5"+
		"\x1B\xB7\n\x1B\x3\x1C\x3\x1C\x3\x1D\x6\x1D\xBC\n\x1D\r\x1D\xE\x1D\xBD"+
		"\x3\x1D\x3\x1D\x2\x2\x2\x1E\x3\x2\x2\x5\x2\x2\a\x2\x2\t\x2\x2\v\x2\x2"+
		"\r\x2\x2\xF\x2\x2\x11\x2\x2\x13\x2\x2\x15\x2\x2\x17\x2\x2\x19\x2\x2\x1B"+
		"\x2\x3\x1D\x2\x4\x1F\x2\x5!\x2\x6#\x2\a%\x2\b\'\x2\t)\x2\n+\x2\v-\x2\f"+
		"/\x2\r\x31\x2\xE\x33\x2\xF\x35\x2\x10\x37\x2\x2\x39\x2\x11\x3\x2*\x4\x2"+
		"LLll\x4\x2\x43\x43\x63\x63\x4\x2PPpp\x4\x2HHhh\x4\x2GGgg\x4\x2\x44\x44"+
		"\x64\x64\x4\x2OOoo\x4\x2TTtt\x4\x2RRrr\x4\x2[[{{\x4\x2WWww\x4\x2NNnn\x4"+
		"\x2IIii\x4\x2UUuu\x4\x2QQqq\x4\x2\x45\x45\x65\x65\x4\x2VVvv\x4\x2XXxx"+
		"\x4\x2\x46\x46\x66\x66\x3\x2\x30\x30\x3\x2\x31\x31\x3\x2..\x3\x2//\x3"+
		"\x2--\x3\x2<<\x3\x2\x32\x32\x3\x2\x32;\x3\x2\x33\x33\x3\x2\x32\x34\x3"+
		"\x2\x35;\x3\x2\x34\x34\x3\x2\x32\x36\x3\x2\x37;\x3\x2\x35\x35\x3\x2\x32"+
		"\x33\x3\x2\x34;\x3\x2\x36\x37\x4\x2>>@@\x3\x2\x38;\x5\x2\v\f\xF\xF\"\""+
		"\xC7\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x3;\x3\x2\x2\x2"+
		"\x5?\x3\x2\x2\x2\a\x43\x3\x2\x2\x2\tG\x3\x2\x2\x2\vK\x3\x2\x2\x2\rO\x3"+
		"\x2\x2\x2\xFS\x3\x2\x2\x2\x11W\x3\x2\x2\x2\x13[\x3\x2\x2\x2\x15_\x3\x2"+
		"\x2\x2\x17\x63\x3\x2\x2\x2\x19g\x3\x2\x2\x2\x1Bw\x3\x2\x2\x2\x1Dy\x3\x2"+
		"\x2\x2\x1F{\x3\x2\x2\x2!}\x3\x2\x2\x2#\x7F\x3\x2\x2\x2%\x81\x3\x2\x2\x2"+
		"\'\x83\x3\x2\x2\x2)\x89\x3\x2\x2\x2+\x8F\x3\x2\x2\x2-\x95\x3\x2\x2\x2"+
		"/\x9B\x3\x2\x2\x2\x31\x9D\x3\x2\x2\x2\x33\xAA\x3\x2\x2\x2\x35\xB6\x3\x2"+
		"\x2\x2\x37\xB8\x3\x2\x2\x2\x39\xBB\x3\x2\x2\x2;<\t\x2\x2\x2<=\t\x3\x2"+
		"\x2=>\t\x4\x2\x2>\x4\x3\x2\x2\x2?@\t\x5\x2\x2@\x41\t\x6\x2\x2\x41\x42"+
		"\t\a\x2\x2\x42\x6\x3\x2\x2\x2\x43\x44\t\b\x2\x2\x44\x45\t\x3\x2\x2\x45"+
		"\x46\t\t\x2\x2\x46\b\x3\x2\x2\x2GH\t\x3\x2\x2HI\t\n\x2\x2IJ\t\t\x2\x2"+
		"J\n\x3\x2\x2\x2KL\t\b\x2\x2LM\t\x3\x2\x2MN\t\v\x2\x2N\f\x3\x2\x2\x2OP"+
		"\t\x2\x2\x2PQ\t\f\x2\x2QR\t\x4\x2\x2R\xE\x3\x2\x2\x2ST\t\x2\x2\x2TU\t"+
		"\f\x2\x2UV\t\r\x2\x2V\x10\x3\x2\x2\x2WX\t\x3\x2\x2XY\t\f\x2\x2YZ\t\xE"+
		"\x2\x2Z\x12\x3\x2\x2\x2[\\\t\xF\x2\x2\\]\t\x6\x2\x2]^\t\n\x2\x2^\x14\x3"+
		"\x2\x2\x2_`\t\x10\x2\x2`\x61\t\x11\x2\x2\x61\x62\t\x12\x2\x2\x62\x16\x3"+
		"\x2\x2\x2\x63\x64\t\x4\x2\x2\x64\x65\t\x10\x2\x2\x65\x66\t\x13\x2\x2\x66"+
		"\x18\x3\x2\x2\x2gh\t\x14\x2\x2hi\t\x6\x2\x2ij\t\x11\x2\x2j\x1A\x3\x2\x2"+
		"\x2kx\x5\x3\x2\x2lx\x5\x5\x3\x2mx\x5\a\x4\x2nx\x5\t\x5\x2ox\x5\v\x6\x2"+
		"px\x5\r\a\x2qx\x5\xF\b\x2rx\x5\x11\t\x2sx\x5\x13\n\x2tx\x5\x15\v\x2ux"+
		"\x5\x17\f\x2vx\x5\x19\r\x2wk\x3\x2\x2\x2wl\x3\x2\x2\x2wm\x3\x2\x2\x2w"+
		"n\x3\x2\x2\x2wo\x3\x2\x2\x2wp\x3\x2\x2\x2wq\x3\x2\x2\x2wr\x3\x2\x2\x2"+
		"ws\x3\x2\x2\x2wt\x3\x2\x2\x2wu\x3\x2\x2\x2wv\x3\x2\x2\x2x\x1C\x3\x2\x2"+
		"\x2yz\t\x15\x2\x2z\x1E\x3\x2\x2\x2{|\t\x16\x2\x2| \x3\x2\x2\x2}~\t\x17"+
		"\x2\x2~\"\x3\x2\x2\x2\x7F\x80\t\x18\x2\x2\x80$\x3\x2\x2\x2\x81\x82\t\x19"+
		"\x2\x2\x82&\x3\x2\x2\x2\x83\x84\t\x1A\x2\x2\x84(\x3\x2\x2\x2\x85\x86\t"+
		"\x1B\x2\x2\x86\x8A\t\x1C\x2\x2\x87\x88\t\x1D\x2\x2\x88\x8A\t\x1E\x2\x2"+
		"\x89\x85\x3\x2\x2\x2\x89\x87\x3\x2\x2\x2\x8A*\x3\x2\x2\x2\x8B\x8C\t\x1D"+
		"\x2\x2\x8C\x90\t\x1F\x2\x2\x8D\x8E\t \x2\x2\x8E\x90\t!\x2\x2\x8F\x8B\x3"+
		"\x2\x2\x2\x8F\x8D\x3\x2\x2\x2\x90,\x3\x2\x2\x2\x91\x92\t \x2\x2\x92\x96"+
		"\t\"\x2\x2\x93\x94\t#\x2\x2\x94\x96\t$\x2\x2\x95\x91\x3\x2\x2\x2\x95\x93"+
		"\x3\x2\x2\x2\x96.\x3\x2\x2\x2\x97\x98\t#\x2\x2\x98\x9C\t%\x2\x2\x99\x9A"+
		"\t&\x2\x2\x9A\x9C\t\x1C\x2\x2\x9B\x97\x3\x2\x2\x2\x9B\x99\x3\x2\x2\x2"+
		"\x9C\x30\x3\x2\x2\x2\x9D\x9E\t\'\x2\x2\x9E\x32\x3\x2\x2\x2\x9F\xA0\t("+
		"\x2\x2\xA0\xAB\t\x1C\x2\x2\xA1\xA2\x5\x37\x1C\x2\xA2\xA3\x5\x37\x1C\x2"+
		"\xA3\xA4\x5\x37\x1C\x2\xA4\xAB\x3\x2\x2\x2\xA5\xA6\x5\x37\x1C\x2\xA6\xA7"+
		"\x5\x37\x1C\x2\xA7\xA8\x5\x37\x1C\x2\xA8\xA9\x5\x37\x1C\x2\xA9\xAB\x3"+
		"\x2\x2\x2\xAA\x9F\x3\x2\x2\x2\xAA\xA1\x3\x2\x2\x2\xAA\xA5\x3\x2\x2\x2"+
		"\xAB\x34\x3\x2\x2\x2\xAC\xB7\x5\x33\x1A\x2\xAD\xAE\x5\x37\x1C\x2\xAE\xAF"+
		"\x5\x37\x1C\x2\xAF\xB0\x5\x37\x1C\x2\xB0\xB2\x5\x37\x1C\x2\xB1\xB3\x5"+
		"\x37\x1C\x2\xB2\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2"+
		"\xB4\xB5\x3\x2\x2\x2\xB5\xB7\x3\x2\x2\x2\xB6\xAC\x3\x2\x2\x2\xB6\xAD\x3"+
		"\x2\x2\x2\xB7\x36\x3\x2\x2\x2\xB8\xB9\t\x1C\x2\x2\xB9\x38\x3\x2\x2\x2"+
		"\xBA\xBC\t)\x2\x2\xBB\xBA\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD\xBB\x3\x2"+
		"\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\xC0\b\x1D\x2\x2\xC0"+
		":\x3\x2\x2\x2\f\x2w\x89\x8F\x95\x9B\xAA\xB4\xB6\xBD\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Daty
